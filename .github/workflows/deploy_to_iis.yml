name: Run self hosted server and deploy to IIS folder
# This workflow allows me to controls when the action will run. Triggers the workflow on push to the master branch
# or manually from the Actions tab
# Author: Yassine Hamadou Mounkaila
on:
  push:
    branches:
      - production
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
  # A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      #      install dependencies only if package.json has changed
      #      - name: Cache node modules
      #        # npm cache files on windows
      #        uses: actions/cache@v3
      #        with:
      #          # A unique key for the cache based on package-lock.json
      #          key: ${{ hashFiles('./package-lock.json') }}
      #          # The path to the cache directory
      #          path: C:\Windows\ServiceProfiles\NetworkService\AppData\Local\npm-cache
      #          # The cache will be restored if the key matches
      #          restore-keys: |
      #            ${{ hashFiles('./package-lock.json') }}
      #          # Checking if the cache hit is not true, if it is true then the dependencies are already installed otherwise we
      #          # install the dependencies on windows server

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --legacy-peer-deps

      - name: Build
        run: npm run ciBuild

      - name: Remove the existing website files except for web.config file
        run: get-childitem 'C:\inetpub\wwwroot\esms\' -Exclude *.config -recurse | remove-item -recurse -force

      - name: Copy build folder to the website folder
        run: Copy-Item -Recurse -Force 'build\*' 'C:\inetpub\wwwroot\esms'
